
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLEGELTGTEQNEQleftPLUSMINUSleftTIMESDIVIDEAND ARRAY BOOK BOOLEAN_VAL BOOL_TYPE BREAK COMMA CONTINUE DATE_TYPE DATE_VAL DICTIONARY DISPLAY DIVIDE ELSE EOL EQ EQUALS FLOAT_NUM FLOAT_TYPE FOREACH FUNCTION GE GEN GT IDENTIFIER IF INT_TYPE LBRACKET LE LPAREN LT MAP MINUS NEQ NOT NUMBER OR PLUS RBRACKET REG RETURN RPAREN SET STRING_LITERAL STRING_TYPE THEN TIMES TIME_TYPE TIME_VAL UNTIL VOID WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement_list_opt : statement_list\n                          | emptystatement : declaration_stmt\n                 | assignment_stmt\n                 | function_def_stmt\n                 | function_call_stmt\n                 | if_stmt\n                 | while_stmt\n                 | return_stmtdeclaration_stmt : type_specifier IDENTIFIER EQUALS expression EOLtype_specifier : INT_TYPE\n                      | FLOAT_TYPE\n                      | STRING_TYPE\n                      | BOOL_TYPE\n                      | DATE_TYPE\n                      | TIME_TYPE\n                      | VOIDassignment_stmt : IDENTIFIER EQUALS expression EOLfunction_def_stmt : FUNCTION type_specifier IDENTIFIER LPAREN param_list RPAREN block_stmtparam_list : param_list COMMA param\n                  | param\n                  | emptyparam : type_specifier IDENTIFIERblock_stmt : LBRACKET statement_list_opt RBRACKETcallable : IDENTIFIER\n                | BOOK\n                | GEN\n                | REG\n                | DISPLAYfunction_call_stmt : function_call EOLfunction_call : callable LPAREN arg_list RPARENarg_list : arg_list COMMA expression\n                | expression\n                | emptyif_stmt : IF LPAREN expression RPAREN block_stmt\n               | IF LPAREN expression RPAREN block_stmt ELSE block_stmtwhile_stmt : WHILE LPAREN expression RPAREN block_stmtreturn_stmt : RETURN expression EOLexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NEQ expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT_NUM\n                  | STRING_LITERAL\n                  | BOOLEAN_VAL\n                  | DATE_VAL\n                  | TIME_VAL\n                  | IDENTIFIER\n                  | function_callempty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,17,18,19,20,21,22,23,24,30,32,33,34,35,36,38,47,48,53,54,55,56,57,58,59,60,61,62,63,69,85,86,87,91,92,93,100,102,104,105,],[12,12,-3,-6,-7,-8,-9,-10,-11,-12,31,45,-14,-15,-16,-17,-18,-19,-20,-2,45,50,-33,45,45,45,45,45,-41,45,45,45,45,45,45,45,45,45,45,-21,45,-13,95,-38,12,-40,12,-22,-39,-27,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,30,34,53,69,86,91,92,93,100,102,104,105,],[13,13,-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,13,-40,13,-22,-39,-27,]),'IF':([0,2,3,4,5,6,7,8,9,10,30,34,53,69,86,91,92,93,100,102,104,105,],[15,15,-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,15,-40,15,-22,-39,-27,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,30,34,53,69,86,91,92,93,100,102,104,105,],[16,16,-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,16,-40,16,-22,-39,-27,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,30,34,53,69,86,91,92,93,100,102,104,105,],[17,17,-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,17,-40,17,-22,-39,-27,]),'INT_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[18,18,-3,-6,-7,-8,-9,-10,-11,-12,18,-2,-33,-41,-21,18,-13,-38,18,-40,18,18,-22,-39,-27,]),'FLOAT_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[19,19,-3,-6,-7,-8,-9,-10,-11,-12,19,-2,-33,-41,-21,19,-13,-38,19,-40,19,19,-22,-39,-27,]),'STRING_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[20,20,-3,-6,-7,-8,-9,-10,-11,-12,20,-2,-33,-41,-21,20,-13,-38,20,-40,20,20,-22,-39,-27,]),'BOOL_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[21,21,-3,-6,-7,-8,-9,-10,-11,-12,21,-2,-33,-41,-21,21,-13,-38,21,-40,21,21,-22,-39,-27,]),'DATE_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[22,22,-3,-6,-7,-8,-9,-10,-11,-12,22,-2,-33,-41,-21,22,-13,-38,22,-40,22,22,-22,-39,-27,]),'TIME_TYPE':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[23,23,-3,-6,-7,-8,-9,-10,-11,-12,23,-2,-33,-41,-21,23,-13,-38,23,-40,23,23,-22,-39,-27,]),'VOID':([0,2,3,4,5,6,7,8,9,10,13,30,34,53,69,70,86,91,92,93,97,100,102,104,105,],[24,24,-3,-6,-7,-8,-9,-10,-11,-12,24,-2,-33,-41,-21,24,-13,-38,24,-40,24,24,-22,-39,-27,]),'BOOK':([0,2,3,4,5,6,7,8,9,10,17,30,32,34,35,36,38,47,48,53,54,55,56,57,58,59,60,61,62,63,69,85,86,91,92,93,100,102,104,105,],[26,26,-3,-6,-7,-8,-9,-10,-11,-12,26,-2,26,-33,26,26,26,26,26,-41,26,26,26,26,26,26,26,26,26,26,-21,26,-13,-38,26,-40,26,-22,-39,-27,]),'GEN':([0,2,3,4,5,6,7,8,9,10,17,30,32,34,35,36,38,47,48,53,54,55,56,57,58,59,60,61,62,63,69,85,86,91,92,93,100,102,104,105,],[27,27,-3,-6,-7,-8,-9,-10,-11,-12,27,-2,27,-33,27,27,27,27,27,-41,27,27,27,27,27,27,27,27,27,27,-21,27,-13,-38,27,-40,27,-22,-39,-27,]),'REG':([0,2,3,4,5,6,7,8,9,10,17,30,32,34,35,36,38,47,48,53,54,55,56,57,58,59,60,61,62,63,69,85,86,91,92,93,100,102,104,105,],[28,28,-3,-6,-7,-8,-9,-10,-11,-12,28,-2,28,-33,28,28,28,28,28,-41,28,28,28,28,28,28,28,28,28,28,-21,28,-13,-38,28,-40,28,-22,-39,-27,]),'DISPLAY':([0,2,3,4,5,6,7,8,9,10,17,30,32,34,35,36,38,47,48,53,54,55,56,57,58,59,60,61,62,63,69,85,86,91,92,93,100,102,104,105,],[29,29,-3,-6,-7,-8,-9,-10,-11,-12,29,-2,29,-33,29,29,29,29,29,-41,29,29,29,29,29,29,29,29,29,29,-21,29,-13,-38,29,-40,29,-22,-39,-27,]),'$end':([1,2,3,4,5,6,7,8,9,10,30,34,53,69,86,91,93,102,104,105,],[0,-1,-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,-40,-22,-39,-27,]),'RBRACKET':([3,4,5,6,7,8,9,10,30,34,53,69,86,91,92,93,99,100,101,102,104,105,],[-3,-6,-7,-8,-9,-10,-11,-12,-2,-33,-41,-21,-13,-38,-61,-40,105,-4,-5,-22,-39,-27,]),'EQUALS':([12,31,],[32,48,]),'LPAREN':([12,15,16,17,25,26,27,28,29,32,35,36,38,45,47,48,50,54,55,56,57,58,59,60,61,62,63,85,],[-28,35,36,38,47,-29,-30,-31,-32,38,38,38,38,-28,38,38,70,38,38,38,38,38,38,38,38,38,38,38,]),'EOL':([14,37,39,40,41,42,43,44,45,46,49,68,73,74,75,76,77,78,79,80,81,82,83,84,],[34,53,-53,-54,-55,-56,-57,-58,-59,-60,69,86,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-34,]),'NUMBER':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FLOAT_NUM':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STRING_LITERAL':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'BOOLEAN_VAL':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'DATE_VAL':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TIME_VAL':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PLUS':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[54,-53,-54,-55,-56,-57,-58,-59,-60,54,54,54,54,54,54,-42,-43,-44,-45,54,54,54,54,54,54,-52,-34,54,]),'MINUS':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[55,-53,-54,-55,-56,-57,-58,-59,-60,55,55,55,55,55,55,-42,-43,-44,-45,55,55,55,55,55,55,-52,-34,55,]),'TIMES':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[56,-53,-54,-55,-56,-57,-58,-59,-60,56,56,56,56,56,56,56,56,-44,-45,56,56,56,56,56,56,-52,-34,56,]),'DIVIDE':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[57,-53,-54,-55,-56,-57,-58,-59,-60,57,57,57,57,57,57,57,57,-44,-45,57,57,57,57,57,57,-52,-34,57,]),'LE':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[58,-53,-54,-55,-56,-57,-58,-59,-60,58,58,58,58,58,58,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,58,]),'GE':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[59,-53,-54,-55,-56,-57,-58,-59,-60,59,59,59,59,59,59,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,59,]),'LT':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[60,-53,-54,-55,-56,-57,-58,-59,-60,60,60,60,60,60,60,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,60,]),'GT':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[61,-53,-54,-55,-56,-57,-58,-59,-60,61,61,61,61,61,61,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,61,]),'EQ':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[62,-53,-54,-55,-56,-57,-58,-59,-60,62,62,62,62,62,62,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,62,]),'NEQ':([37,39,40,41,42,43,44,45,46,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,94,],[63,-53,-54,-55,-56,-57,-58,-59,-60,63,63,63,63,63,63,-42,-43,-44,-45,None,None,None,None,None,None,-52,-34,63,]),'RPAREN':([39,40,41,42,43,44,45,46,47,51,52,64,65,66,67,70,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,94,95,103,],[-53,-54,-55,-56,-57,-58,-59,-60,-61,71,72,83,84,-36,-37,-61,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-34,96,-24,-25,-35,-26,-23,]),'COMMA':([39,40,41,42,43,44,45,46,47,65,66,67,70,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,94,95,103,],[-53,-54,-55,-56,-57,-58,-59,-60,-61,85,-36,-37,-61,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-34,97,-24,-25,-35,-26,-23,]),'LBRACKET':([71,72,96,98,],[92,92,92,92,]),'ELSE':([91,105,],[98,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,92,],[2,100,]),'statement':([0,2,92,100,],[3,30,3,30,]),'declaration_stmt':([0,2,92,100,],[4,4,4,4,]),'assignment_stmt':([0,2,92,100,],[5,5,5,5,]),'function_def_stmt':([0,2,92,100,],[6,6,6,6,]),'function_call_stmt':([0,2,92,100,],[7,7,7,7,]),'if_stmt':([0,2,92,100,],[8,8,8,8,]),'while_stmt':([0,2,92,100,],[9,9,9,9,]),'return_stmt':([0,2,92,100,],[10,10,10,10,]),'type_specifier':([0,2,13,70,92,97,100,],[11,11,33,87,11,87,11,]),'function_call':([0,2,17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,92,100,],[14,14,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,14,14,]),'callable':([0,2,17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,92,100,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expression':([17,32,35,36,38,47,48,54,55,56,57,58,59,60,61,62,63,85,],[37,49,51,52,64,66,68,73,74,75,76,77,78,79,80,81,82,94,]),'arg_list':([47,],[65,]),'empty':([47,70,92,],[67,90,101,]),'param_list':([70,],[88,]),'param':([70,97,],[89,103,]),'block_stmt':([71,72,96,98,],[91,93,102,104,]),'statement_list_opt':([92,],[99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser_mod.py',30),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_mod.py',34),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_mod.py',35),
  ('statement_list_opt -> statement_list','statement_list_opt',1,'p_statement_list_opt','parser_mod.py',42),
  ('statement_list_opt -> empty','statement_list_opt',1,'p_statement_list_opt','parser_mod.py',43),
  ('statement -> declaration_stmt','statement',1,'p_statement','parser_mod.py',50),
  ('statement -> assignment_stmt','statement',1,'p_statement','parser_mod.py',51),
  ('statement -> function_def_stmt','statement',1,'p_statement','parser_mod.py',52),
  ('statement -> function_call_stmt','statement',1,'p_statement','parser_mod.py',53),
  ('statement -> if_stmt','statement',1,'p_statement','parser_mod.py',54),
  ('statement -> while_stmt','statement',1,'p_statement','parser_mod.py',55),
  ('statement -> return_stmt','statement',1,'p_statement','parser_mod.py',56),
  ('declaration_stmt -> type_specifier IDENTIFIER EQUALS expression EOL','declaration_stmt',5,'p_declaration_stmt','parser_mod.py',63),
  ('type_specifier -> INT_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',71),
  ('type_specifier -> FLOAT_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',72),
  ('type_specifier -> STRING_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',73),
  ('type_specifier -> BOOL_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',74),
  ('type_specifier -> DATE_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',75),
  ('type_specifier -> TIME_TYPE','type_specifier',1,'p_type_specifier','parser_mod.py',76),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser_mod.py',77),
  ('assignment_stmt -> IDENTIFIER EQUALS expression EOL','assignment_stmt',4,'p_assignment_stmt','parser_mod.py',84),
  ('function_def_stmt -> FUNCTION type_specifier IDENTIFIER LPAREN param_list RPAREN block_stmt','function_def_stmt',7,'p_function_def_stmt','parser_mod.py',94),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser_mod.py',103),
  ('param_list -> param','param_list',1,'p_param_list','parser_mod.py',104),
  ('param_list -> empty','param_list',1,'p_param_list','parser_mod.py',105),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param','parser_mod.py',114),
  ('block_stmt -> LBRACKET statement_list_opt RBRACKET','block_stmt',3,'p_block_stmt','parser_mod.py',124),
  ('callable -> IDENTIFIER','callable',1,'p_callable','parser_mod.py',131),
  ('callable -> BOOK','callable',1,'p_callable','parser_mod.py',132),
  ('callable -> GEN','callable',1,'p_callable','parser_mod.py',133),
  ('callable -> REG','callable',1,'p_callable','parser_mod.py',134),
  ('callable -> DISPLAY','callable',1,'p_callable','parser_mod.py',135),
  ('function_call_stmt -> function_call EOL','function_call_stmt',2,'p_function_call_stmt','parser_mod.py',139),
  ('function_call -> callable LPAREN arg_list RPAREN','function_call',4,'p_function_call','parser_mod.py',143),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser_mod.py',150),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser_mod.py',151),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser_mod.py',152),
  ('if_stmt -> IF LPAREN expression RPAREN block_stmt','if_stmt',5,'p_if_stmt','parser_mod.py',164),
  ('if_stmt -> IF LPAREN expression RPAREN block_stmt ELSE block_stmt','if_stmt',7,'p_if_stmt','parser_mod.py',165),
  ('while_stmt -> WHILE LPAREN expression RPAREN block_stmt','while_stmt',5,'p_while_stmt','parser_mod.py',179),
  ('return_stmt -> RETURN expression EOL','return_stmt',3,'p_return_stmt','parser_mod.py',186),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser_mod.py',195),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser_mod.py',196),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser_mod.py',197),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser_mod.py',198),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser_mod.py',199),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser_mod.py',200),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser_mod.py',201),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser_mod.py',202),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser_mod.py',203),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser_mod.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser_mod.py',212),
  ('expression -> NUMBER','expression',1,'p_expression_atom','parser_mod.py',216),
  ('expression -> FLOAT_NUM','expression',1,'p_expression_atom','parser_mod.py',217),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_atom','parser_mod.py',218),
  ('expression -> BOOLEAN_VAL','expression',1,'p_expression_atom','parser_mod.py',219),
  ('expression -> DATE_VAL','expression',1,'p_expression_atom','parser_mod.py',220),
  ('expression -> TIME_VAL','expression',1,'p_expression_atom','parser_mod.py',221),
  ('expression -> IDENTIFIER','expression',1,'p_expression_atom','parser_mod.py',222),
  ('expression -> function_call','expression',1,'p_expression_atom','parser_mod.py',223),
  ('empty -> <empty>','empty',0,'p_empty','parser_mod.py',236),
]
